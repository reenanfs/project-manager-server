type Credential {
  id: ID!
  email: String!
  user: User
  refreshToken: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GetCredentialsOrderBy {
  updatedAt: SortOrder
}

input GetCredentialsInput {
  orderBy: GetCredentialsOrderBy
}

input CredentialUserInput {
  name: String!
  isAdmin: Boolean!
}

input CreateCredentialInput {
  email: String!
  password: String!
  refreshToken: String
  user: CredentialUserInput!
}

input UpdateCredentialInput {
  id: ID!
  email: String
  refreshToken: String
  userId: ID
}

input CredentialWhereUniqueInput {
  id: ID
  email: String
  userId: ID
}

type Query {
  credentials(input: CredentialWhereUniqueInput): [Credential]
  credential(input: CredentialWhereUniqueInput!): Credential
}

type Mutation {
  createCredential(input: CreateCredentialInput!): Credential
  updateCredential(input: UpdateCredentialInput!): Credential
  deleteCredential(input: PermissionWhereUniqueInput!): Permission
  deleteCredentials(input: DeleteMultipleItemsInput): BulkOperationResult
}
