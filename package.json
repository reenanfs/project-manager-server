{
  "name": "server",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "gen-types": "ts-node src/graphql/generate-types",
    "prisma:gen": "prisma generate --watch",
    "prisma:db-push": "prisma db push",
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "dev": "concurrently \"npm:start:dev\" \"npm:prisma:gen\" \"npm:gen-types\"",
    "dev:gen": "concurrently \"npm:prisma:gen\" \"npm:gen-types\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest && npm run test:e2e",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "pretest:e2e": "dotenv -e config/.env.dev -- npx prisma migrate deploy",
    "test:e2e": "dotenv -e config/.env.dev -- jest -i --config ./test/jest-e2e.json",
    "docker:dev": "docker-compose --env-file config/.env.dev -f docker-compose.yml -f docker-compose.dev.yml up",
    "docker:dev:migration": "docker-compose --env-file config/.env.dev -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.migration.yml up --abort-on-container-exit",
    "docker:dev:build": "docker-compose --env-file config/.env.dev -f docker-compose.yml -f docker-compose.dev.yml up --build --force-recreate --no-deps",
    "docker:test": "docker-compose --env-file config/.env.dev -f docker-compose.yml -f docker-compose.test.yml up --abort-on-container-exit"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.312.0",
    "@aws-sdk/s3-request-presigner": "^3.312.0",
    "@nestjs/apollo": "^10.0.11",
    "@nestjs/common": "^8.0.0",
    "@nestjs/config": "^2.3.1",
    "@nestjs/core": "^8.0.0",
    "@nestjs/graphql": "^10.0.11",
    "@nestjs/jwt": "^9.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^8.0.0",
    "@prisma/client": "^3.14.0",
    "@types/graphql-upload": "^16.0.0",
    "apollo-server-express": "^3.7.0",
    "bcrypt": "^5.0.1",
    "cache-manager": "^4.0.0",
    "cache-manager-redis-yet": "^4.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "cookie-parser": "^1.4.6",
    "dotenv-cli": "^6.0.0",
    "graphql": "^16.5.0",
    "graphql-scalars": "^1.17.0",
    "graphql-upload": "^15.0.2",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "prisma": "^3.14.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^8.0.0",
    "@nestjs/schematics": "^8.0.0",
    "@nestjs/testing": "^8.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/cache-manager": "^4.0.2",
    "@types/cookie-parser": "^1.4.3",
    "@types/express": "^4.17.13",
    "@types/jest": "27.0.2",
    "@types/multer": "^1.4.7",
    "@types/node": "^16.0.0",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/supertest": "^2.0.11",
    "@types/uuid": "^9.0.1",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "concurrently": "^7.1.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "^27.2.5",
    "prettier": "^2.3.2",
    "prisma-nestjs-graphql": "^15.3.1",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.3",
    "ts-loader": "^9.2.3",
    "ts-morph": "^14.0.0",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/$1"
    }
  }
}
